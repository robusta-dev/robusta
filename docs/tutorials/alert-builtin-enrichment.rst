.. _builtin-alert-enrichment:

Enhanced Prometheus Alerts
########################################

Robusta takes Prometheus to the next level by correlating alerts with other observability data.

Robusta has two primary sources of alerts:

* Prometheus alerts, forwarded by AlertManager to Robusta
* APIServer Alerts, generated by Robusta itself (e.g. for OOMKilled pods)

Let's see each type of alert in action.

.. Prerequisites
.. ---------------

.. Either of the following:

.. * :ref:`Robusta installed with embedded Prometheus <Monitor Kubernetes from Scratch>`
.. * :ref:`Robusta integrated with an external Prometheus <Integrating AlertManager and Prometheus>`

Testing out Prometeheus alerts
*********************************
1. Deploy a broken pod that will be stuck in pending state:

.. code-block:: bash
   :name: cb-apply-crashpod

   kubectl apply -f https://raw.githubusercontent.com/robusta-dev/kubernetes-demos/main/pending_pods/pending_pod.yaml

2. Trigger a Prometheus alert immediately, skipping the normal delays:

.. code-block:: bash
   :name: cb-apply-crashpod

   robusta playbooks trigger prometheus_alert alert_name=KubePodCrashLooping namespace=default pod_name=example-pod

.. admonition:: Example Slack Message

    .. image:: /images/simulatedprometheusalert.png


Testing out APIServer alerts
**********************************

Let's deploy a crashing pod:

.. code-block:: bash
   :name: cb-apply-crashpod

   kubectl apply -f https://gist.githubusercontent.com/robusta-lab/283609047306dc1f05cf59806ade30b6/raw

Verify that the pod is actually crashing:

.. code-block:: console
   :name: cb-verify-crash-pod-crashing

   $ kubectl get pods -A | grep crashpod
   NAME                            READY   STATUS             RESTARTS   AGE
   crashpod-64d8fbfd-s2dvn         0/1     CrashLoopBackOff   1          7s

Once the pod has reached two restarts, you'll get notified in Slack (or whatever alternative integration you configured):

.. admonition:: Example Slack Message

    .. image:: /images/crash-report.png


Now open the `Robusta UI <https://platform.robusta.dev/>`_ and look for the same message there.

Finally, clean up the crashing pod:

.. code-block:: bash
   :name: cb-delete-crashpod

   kubectl delete deployment crashpod
