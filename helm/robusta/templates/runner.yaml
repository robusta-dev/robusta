apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "robusta.fullname" . }}-runner
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "robusta.fullname" . }}-runner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "robusta.fullname" . }}-runner
  template:
    metadata:
      labels:
        app: {{ include "robusta.fullname" . }}-runner
        robustaComponent: "runner"
        {{- with .Values.runner.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if or .Values.runner.annotations .Values.globalConfig.custom_annotations }}
      annotations:
        {{- if .Values.runner.annotations}} {{ toYaml .Values.runner.annotations | nindent 8 }}
        {{- end }}
        {{- if .Values.globalConfig.custom_annotations }} {{ toYaml .Values.globalConfig.custom_annotations | nindent 8 }}
        {{- end }}
      {{- end }}
    spec:
      {{- if .Values.runner.customServiceAccount }}
      serviceAccountName: {{ .Values.runner.customServiceAccount }}
      {{ else }}
      serviceAccountName: {{ include "robusta.fullname" . }}-runner-service-account
      {{- end }}
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      {{- if .Values.runner.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml .Values.runner.imagePullSecrets | nindent 6 }}
      {{- end }}
      {{- with .Values.runner.securityContext.pod }}
      securityContext:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: runner
        {{- if .Values.runner.image }}
        image: {{ .Values.runner.image }}
        {{ else }}
        image: {{ .Values.image.registry }}/{{ .Values.runner.imageName }}
        {{- end }}
        imagePullPolicy: {{ .Values.runner.imagePullPolicy }}
        {{- with .Values.runner.securityContext.container }}
        securityContext:
        {{- toYaml . | nindent 12 }}
        {{- end }}
        env:
          - name: PLAYBOOKS_CONFIG_FILE_PATH
            value: /etc/robusta/config/active_playbooks.yaml
          - name: RELEASE_NAME
            value: {{ include "robusta.fullname" .| quote }}
          {{- if .Values.runner.customServiceAccount }}
          - name: RUNNER_SERVICE_ACCOUNT
            value: {{ .Values.runner.customServiceAccount }}
          {{- end }}
          - name: PROMETHEUS_ENABLED
            value: {{ .Values.enablePrometheusStack | quote}}
          - name: MANAGED_CONFIGURATION_ENABLED
            value: {{ .Values.enabledManagedConfiguration | quote}}
          - name: SEND_ADDITIONAL_TELEMETRY
            value: {{ .Values.runner.sendAdditionalTelemetry | quote }}
          - name: LOG_LEVEL
            value: {{ .Values.runner.log_level }}
          - name: INSTALLATION_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          {{- if .Values.disableCloudRouting }}
          - name: CLOUD_ROUTING
            value: "False"
          {{- end }}
          {{- if not .Values.monitorHelmReleases }}
          - name: DISABLE_HELM_MONITORING
            value: "True"
          {{- end }}
          {{- if .Values.scaleAlertsProcessing }}
          - name: ALERTS_WORKERS_POOL
            value: "True"
          {{- end }}
          - name: RUNNER_VERSION
            value: {{ .Chart.AppVersion }}
          - name: CERTIFICATE
            value: {{ .Values.runner.certificate }}
          - name: IMAGE_REGISTRY
            value: {{ .Values.image.registry }}
          - name: CLUSTER_DOMAIN
            value: {{ .Values.global.clusterDomain }}
          {{- if .Values.openshift.enabled }}
          - name: IS_OPENSHIFT
            value: "True"
          {{- end }}
          {{- if .Values.argoRollouts }}
          - name: ARGO_ROLLOUTS
            value: "True"
          {{- end }}
          {{- if kindIs "string" .Values.runner.additional_env_vars }}
          {{- fail "The `additional_env_vars` string value is deprecated. Change the `additional_env_vars` value to an array" -}}
          {{- end }}
          {{- if .Values.runner.additional_env_vars }}
          {{ toYaml .Values.runner.additional_env_vars | nindent 10 }}
          {{- end }}
        envFrom:
        - secretRef:
            name: {{ include "robusta.fullname" . }}-runner-secret
            optional: true
        {{- if .Values.runner.additional_env_froms }}
        {{ toYaml .Values.runner.additional_env_froms | nindent 8 }}
        {{- end }}
        volumeMounts:
          - name: auth-config-secret
            mountPath: /etc/robusta/auth
          - name: playbooks-config-secret
            mountPath: /etc/robusta/config
          {{- if .Values.playbooksPersistentVolume }}
          - name: persistent-playbooks-storage
            mountPath: /etc/robusta/playbooks/storage
          {{- end }}
          {{- with .Values.runner.extraVolumeMounts }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        lifecycle:
          preStop:
            exec:
              command: ["bash", "-c", "kill -SIGINT 1"]
        resources:
          requests:
            cpu: {{ .Values.runner.resources.requests.cpu }}
            memory: {{ if .Values.isSmallCluster }}"512Mi"{{ else }}{{ .Values.runner.resources.requests.memory | quote }}{{ end }}
          limits:
            memory: {{ if .Values.isSmallCluster }}"512Mi"{{ else if .Values.runner.resources.limits.memory }}{{ .Values.runner.resources.limits.memory | quote }}{{ else }}{{ .Values.runner.resources.requests.memory | quote }}{{ end }}
            {{ if .Values.runner.resources.limits.cpu }}cpu: {{ .Values.runner.resources.limits.cpu | quote }}{{ end }}
      {{- if .Values.grafanaRenderer.enableContainer }}
      - name: grafana-renderer
        {{- if .Values.grafanaRenderer.image }}
        image: {{ .Values.grafanaRenderer.image }}
        {{ else }}
        image: {{ .Values.image.registry }}/{{ .Values.grafanaRenderer.imageName }}
        {{- end }}
        imagePullPolicy: {{ .Values.grafanaRenderer.imagePullPolicy }}
        {{- with .Values.grafanaRenderer.securityContext.container }}
        securityContext:
        {{- toYaml . | nindent 12 }}
        {{- end }}
        lifecycle:
          preStop:
            exec:
              command: ["bash", "-c", "kill -SIGINT 1"]
        resources:
          requests:
            cpu: {{ .Values.grafanaRenderer.resources.requests.cpu }}
            memory: {{ if .Values.isSmallCluster }}"64Mi"{{ else }}{{ .Values.grafanaRenderer.resources.requests.memory | quote }}{{ end }}
          limits:
            memory: {{ if .Values.isSmallCluster }}"64Mi"{{ else if .Values.grafanaRenderer.resources.limits.memory }}{{ .Values.grafanaRenderer.resources.limits.memory | quote }}{{ else }}{{ .Values.grafanaRenderer.resources.requests.memory | quote }}{{ end }}
            {{ if .Values.grafanaRenderer.resources.limits.cpu }}cpu: {{ .Values.grafanaRenderer.resources.limits.cpu | quote }}{{ end }}
      {{- end }}
      volumes:
        - name: playbooks-config-secret
          secret:
            secretName: robusta-playbooks-config-secret
            optional: true
        - name: auth-config-secret
          secret:
            {{- $subBloc := .Values.rsa | default dict }}
            secretName: {{ default "robusta-auth-config-secret" $subBloc.existingSecret }}
            optional: true
        {{- if .Values.playbooksPersistentVolume }}
        - name: persistent-playbooks-storage
          persistentVolumeClaim:
            claimName: persistent-playbooks-pv-claim
        {{- end }}
        {{- with .Values.runner.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if .Values.runner.nodeSelector }}
      nodeSelector: {{ toYaml .Values.runner.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.runner.affinity }}
      affinity: {{ toYaml .Values.runner.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.runner.tolerations }}
      tolerations:  {{ toYaml .Values.runner.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.runner.priorityClassName }}
      priorityClassName: {{ .Values.runner.priorityClassName }}
      {{- end }}
{{- if .Values.playbooksPersistentVolume }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: persistent-playbooks-pv-claim
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ if .Values.isSmallCluster }}"512Mi"{{ else }}{{ .Values.playbooksPersistentVolumeSize }}{{ end }}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "robusta.fullname" . }}-runner
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "robusta.fullname" . }}-runner
    target: {{ include "robusta.fullname" . }}-runner
spec:
  selector:
    app: {{ include "robusta.fullname" . }}-runner
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 5000
---
{{ if and (.Values.enableServiceMonitors) (or (.Values.enablePrometheusStack) (.Capabilities.APIVersions.Has "monitoring.coreos.com/v1/ServiceMonitor") ) }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: robusta-runner-service-monitor
  labels:
    # this label is how the Prometheus installed with Robusta finds ServiceMonitors
    release: {{ include "robusta.fullname" . }}
    {{- with .Values.runner.serviceMonitor.additionalLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  endpoints:
    - path: {{ .Values.runner.serviceMonitor.path }}
      port: http
      {{- if .Values.runner.serviceMonitor.interval }}
      interval: {{ .Values.runner.serviceMonitor.interval }}
      {{- end }}
      {{- if .Values.runner.serviceMonitor.scrapeTimeout }}
      scrapeTimeout: {{ .Values.runner.serviceMonitor.scrapeTimeout }}
      {{- end }}
      {{- if .Values.runner.serviceMonitor.relabelings }}
      relabelings: {{- tpl (toYaml .Values.runner.serviceMonitor.relabelings) . | nindent 8 }}
      {{- end }}
      {{- if .Values.runner.serviceMonitor.metricRelabelings }}
      metricRelabelings: {{- tpl (toYaml .Values.runner.serviceMonitor.metricRelabelings) . | nindent 8 }}
      {{- end }}
      {{- if .Values.runner.serviceMonitor.honorLabels }}
      honorLabels: {{ .Values.runner.serviceMonitor.honorLabels }}
      {{- end }}
  selector:
    matchLabels:
      app: {{ include "robusta.fullname" . }}-runner
  targetLabels:
    - target
{{ end }}
---
{{ if .Values.runner.sentry_dsn }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "robusta.fullname" . }}-runner-secret
  namespace: {{ .Release.Namespace }}
type: Opaque
stringData:
  SENTRY_DSN: {{ .Values.runner.sentry_dsn }}
{{ end }}
