name: Build & Deploy Robusta Docs

on:
  create: {}
  release:
    types: [published]
  push:
    paths:
      - 'docs/**'
      - .github/workflows/deploy-docs.yaml
  # we need this in addition to push to build the docs when the PR is opened and not just on later pushes after it is open
  pull_request:
    paths:
      - 'docs/**'
    types: [opened]


jobs:
  has-secrets:
    name: Check Secrets
    runs-on: ubuntu-latest

    steps:
    - id: docs
      env:
        HAS_SECRET_ACCESS: ${{ secrets.HAS_SECRET_ACCESS }}
      if: ${{ env.HAS_SECRET_ACCESS != '' }}
      run: echo '::set-output name=docs::true'
    outputs:
      docs: ${{ steps.docs.outputs.docs }}

  setup-build-publish-deploy:
    name: Deploy docs
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    needs: [has-secrets]
    env:
      PROJECT_ID: ${{ secrets.GKE_PROD_PROJECT }}
    steps:
    # we do this before building the docs so that even if the docs fail building, we still have the comment on the PR for later once the build is fixed
    # (we can't post the comment each time this workflow runs on we will have multiple comments, so we need to post it only once when the PR is opened)
    - name: Post preview link on PR
      if: github.event_name == 'pull_request'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        PR_NUMBER=$(echo ${{ github.event.pull_request.number }})
        PREVIEW_URL="https://docs.robusta.dev/${GITHUB_HEAD_REF}"
        curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
             -d "{\"body\": \"üîç [Preview Docs](${PREVIEW_URL})\n\n**Note: preview docs will only be available at this URL once the initial docs finish building!**\"}" \
             "https://api.github.com/repos/${{ github.repository }}/issues/${PR_NUMBER}/comments"

    - name: Checkout
      uses: actions/checkout@v4

    - uses: google-github-actions/auth@v2
      if: needs.has-secrets.outputs.docs
      with:
        project_id: ${{ secrets.GKE_PROD_PROJECT }}
        workload_identity_provider: 'projects/429189597230/locations/global/workloadIdentityPools/github/providers/robusta-repos' # prod

    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v2
      if: needs.has-secrets.outputs.docs
      with:
        project_id: ${{ secrets.GKE_PROD_PROJECT }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        sudo apt-get install graphviz pandoc
        curl -sSL https://install.python-poetry.org | python3 - --version 1.4.0
        poetry config virtualenvs.create false
        poetry install --extras=all

    # see https://stackoverflow.com/a/58034787/495995 for an explanation on ${GITHUB_REF##*/}
    - name: Update docs version
      run: |
        echo "Setting DOCS_VERSION_PLACEHOLDER to ${GITHUB_REF##*/}"
        sed -i "s/DOCS_VERSION_PLACEHOLDER/${GITHUB_REF##*/}/g" docs/conf.py
        sed -i "s/DOCS_RELEASE_PLACEHOLDER/${GITHUB_REF##*/}/g" docs/conf.py

    - name: Build the docs
      env:
        ROBUSTA_GOOGLE_FONTS_API_KEY: ${{ secrets.ROBUSTA_GOOGLE_FONTS_API_KEY }}
      run: |
        cd docs
        poetry run make html

    - name: Upload docs to public gcp bucket
      if: needs.has-secrets.outputs.docs
      run: gsutil rsync -R ./docs/_build/html "gs://robusta-docs/${GITHUB_REF##*/}/"

    - name: Upload docs artifact
      uses: actions/upload-artifact@v4
      with:
        name: docs
        path: docs/_build/html
